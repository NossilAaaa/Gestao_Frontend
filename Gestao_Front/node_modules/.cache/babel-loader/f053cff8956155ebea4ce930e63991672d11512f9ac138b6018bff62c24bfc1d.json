{"ast":null,"code":"export const getDepartamentoAPI = async () => {\n  const response = await fetch(`${process.env.REACT_APP_ENDERECO_API}/departamentos`, {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  });\n  const data = await response.json();\n  return data;\n};\n/*\nexport const getDepartamentoPorCodigoAPI = async id => {\n    const response = await \n        fetch(`${process.env.REACT_APP_ENDERECO_API}/departamentos/${id}`,\n            {\n                method : \"GET\",\n                headers : {\n                    \"Content-Type\" : \"application/json\"\n                }\n            }\n        );\n    const data = await response.json();\n    return data;\n}*/\n\nexport const getDepartamentoPorCodigoAPI = async id => {\n  const resposta = await fetch(`${process.env.REACT_APP_ENDERECO_API}/departamentos/${id}`);\n  if (!resposta.ok) {\n    throw new Error(\"Erro ao obter o departamento\");\n  }\n  return await resposta.json();\n};\nexport const deleteDepartamentoPorCodigoAPI = async id => {\n  const response = await fetch(`${process.env.REACT_APP_ENDERECO_API}/departamentos/${id}`, {\n    method: \"DELETE\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  });\n  const data = await response.json();\n  return data;\n};\nexport const cadastraDepartamentoAPI = async (objeto, metodo) => {\n  const response = await fetch(`${process.env.REACT_APP_ENDERECO_API}/departamentos/`, {\n    method: metodo,\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(objeto)\n  });\n  const data = await response.json();\n  return data;\n};","map":{"version":3,"names":["getDepartamentoAPI","response","fetch","process","env","REACT_APP_ENDERECO_API","method","headers","data","json","getDepartamentoPorCodigoAPI","id","resposta","ok","Error","deleteDepartamentoPorCodigoAPI","cadastraDepartamentoAPI","objeto","metodo","body","JSON","stringify"],"sources":["C:/Users/aliss/OneDrive/Área de Trabalho/Projeto_PW/Gestao_Front/src/servicos/DepartamentoServico.jsx"],"sourcesContent":["export const getDepartamentoAPI = async () => {\n    const response = await \n        fetch(`${process.env.REACT_APP_ENDERECO_API}/departamentos`,\n            {\n                method : \"GET\",\n                headers : {\n                    \"Content-Type\" : \"application/json\"\n                }\n            }\n        );\n    const data = await response.json();\n    return data;\n}\n/*\nexport const getDepartamentoPorCodigoAPI = async id => {\n    const response = await \n        fetch(`${process.env.REACT_APP_ENDERECO_API}/departamentos/${id}`,\n            {\n                method : \"GET\",\n                headers : {\n                    \"Content-Type\" : \"application/json\"\n                }\n            }\n        );\n    const data = await response.json();\n    return data;\n}*/\n\nexport const getDepartamentoPorCodigoAPI = async (id) => {\n    const resposta = await fetch(`${process.env.REACT_APP_ENDERECO_API}/departamentos/${id}`);\n    if (!resposta.ok) {\n        throw new Error(\"Erro ao obter o departamento\");\n    }\n    return await resposta.json();\n};\n\nexport const deleteDepartamentoPorCodigoAPI = async id => {\n    const response = await \n        fetch(`${process.env.REACT_APP_ENDERECO_API}/departamentos/${id}`,\n            {\n                method : \"DELETE\",\n                headers : {\n                    \"Content-Type\" : \"application/json\"\n                }\n            }\n        );\n    const data = await response.json();\n    return data;\n}\n\nexport const cadastraDepartamentoAPI = async (objeto, metodo) => {\n    const response = await \n        fetch(`${process.env.REACT_APP_ENDERECO_API}/departamentos/`,\n            {\n                method : metodo,\n                headers : {\n                    \"Content-Type\" : \"application/json\"\n                },\n                body : JSON.stringify(objeto)\n            }\n        );\n    const data = await response.json();\n    return data;\n}"],"mappings":"AAAA,OAAO,MAAMA,kBAAkB,GAAG,MAAAA,CAAA,KAAY;EAC1C,MAAMC,QAAQ,GAAG,MACbC,KAAK,CAAC,GAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB,gBAAgB,EACvD;IACIC,MAAM,EAAG,KAAK;IACdC,OAAO,EAAG;MACN,cAAc,EAAG;IACrB;EACJ,CACJ,CAAC;EACL,MAAMC,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;EAClC,OAAOD,IAAI;AACf,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAME,2BAA2B,GAAG,MAAOC,EAAE,IAAK;EACrD,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAAC,GAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB,kBAAkBM,EAAE,EAAE,CAAC;EACzF,IAAI,CAACC,QAAQ,CAACC,EAAE,EAAE;IACd,MAAM,IAAIC,KAAK,CAAC,8BAA8B,CAAC;EACnD;EACA,OAAO,MAAMF,QAAQ,CAACH,IAAI,CAAC,CAAC;AAChC,CAAC;AAED,OAAO,MAAMM,8BAA8B,GAAG,MAAMJ,EAAE,IAAI;EACtD,MAAMV,QAAQ,GAAG,MACbC,KAAK,CAAC,GAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB,kBAAkBM,EAAE,EAAE,EAC7D;IACIL,MAAM,EAAG,QAAQ;IACjBC,OAAO,EAAG;MACN,cAAc,EAAG;IACrB;EACJ,CACJ,CAAC;EACL,MAAMC,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;EAClC,OAAOD,IAAI;AACf,CAAC;AAED,OAAO,MAAMQ,uBAAuB,GAAG,MAAAA,CAAOC,MAAM,EAAEC,MAAM,KAAK;EAC7D,MAAMjB,QAAQ,GAAG,MACbC,KAAK,CAAC,GAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB,iBAAiB,EACxD;IACIC,MAAM,EAAGY,MAAM;IACfX,OAAO,EAAG;MACN,cAAc,EAAG;IACrB,CAAC;IACDY,IAAI,EAAGC,IAAI,CAACC,SAAS,CAACJ,MAAM;EAChC,CACJ,CAAC;EACL,MAAMT,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;EAClC,OAAOD,IAAI;AACf,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}