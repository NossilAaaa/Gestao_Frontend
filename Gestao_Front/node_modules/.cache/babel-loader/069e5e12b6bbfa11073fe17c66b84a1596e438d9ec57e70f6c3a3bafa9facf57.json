{"ast":null,"code":"export const getDepartamentoAPI = async () => {\n  const response = await fetch(`${process.env.REACT_APP_ENDERECO_API}/departamentos`, {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  });\n  const data = await response.json();\n  return data;\n};\n/*\nexport const getDepartamentoPorCodigoAPI = async id => {\n    const response = await \n        fetch(`${process.env.REACT_APP_ENDERECO_API}/departamentos/${id}`,\n            {\n                method : \"GET\",\n                headers : {\n                    \"Content-Type\" : \"application/json\"\n                }\n            }\n        );\n    const data = await response.json();\n    return data;\n}*/\n\nexport const getDepartamentoPorCodigoAPI = async id => {\n  const resposta = await fetch(`${process.env.REACT_APP_ENDERECO_API}/departamentos/${id}`);\n  if (!resposta.ok) {\n    throw new Error(\"Erro ao obter o departamento\");\n  }\n  return await resposta.json();\n};\nexport const deleteDepartamentoPorCodigoAPI = async id => {\n  const response = await fetch(`${process.env.REACT_APP_ENDERECO_API}/departamentos/${id}`, {\n    method: \"DELETE\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  });\n  const data = await response.json();\n  return data;\n};\nexport const cadastraDepartamentoAPI = async (departamento, metodo) => {\n  const url = metodo === \"POST\" ? 'http://127.0.0.1:3002/departamentos' : `http://127.0.0.1:3002/departamentos/${departamento.id}`;\n  const response = await fetch(url, {\n    method: metodo,\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(departamento)\n  });\n  if (!response.ok) {\n    console.error(`Erro ao cadastrar: ${response.status} - ${response.statusText}`);\n    return {\n      status: \"error\",\n      message: \"Erro ao cadastrar departamento\"\n    };\n  }\n  try {\n    const data = await response.json();\n    return {\n      status: \"success\",\n      message: \"Departamento cadastrado com sucesso\",\n      data\n    };\n  } catch (error) {\n    console.error(\"Erro ao fazer parse do JSON:\", error);\n    return {\n      status: \"error\",\n      message: \"Erro ao processar resposta da API\"\n    };\n  }\n};","map":{"version":3,"names":["getDepartamentoAPI","response","fetch","process","env","REACT_APP_ENDERECO_API","method","headers","data","json","getDepartamentoPorCodigoAPI","id","resposta","ok","Error","deleteDepartamentoPorCodigoAPI","cadastraDepartamentoAPI","departamento","metodo","url","body","JSON","stringify","console","error","status","statusText","message"],"sources":["C:/Users/aliss/OneDrive/Área de Trabalho/Projeto_PW/Gestao_Front/src/servicos/DepartamentoServico.jsx"],"sourcesContent":["export const getDepartamentoAPI = async () => {\n    const response = await \n        fetch(`${process.env.REACT_APP_ENDERECO_API}/departamentos`,\n            {\n                method : \"GET\",\n                headers : {\n                    \"Content-Type\" : \"application/json\"\n                }\n            }\n        );\n    const data = await response.json();\n    return data;\n}\n/*\nexport const getDepartamentoPorCodigoAPI = async id => {\n    const response = await \n        fetch(`${process.env.REACT_APP_ENDERECO_API}/departamentos/${id}`,\n            {\n                method : \"GET\",\n                headers : {\n                    \"Content-Type\" : \"application/json\"\n                }\n            }\n        );\n    const data = await response.json();\n    return data;\n}*/\n\nexport const getDepartamentoPorCodigoAPI = async (id) => {\n    const resposta = await fetch(`${process.env.REACT_APP_ENDERECO_API}/departamentos/${id}`);\n    if (!resposta.ok) {\n        throw new Error(\"Erro ao obter o departamento\");\n    }\n    return await resposta.json();\n};\n\nexport const deleteDepartamentoPorCodigoAPI = async id => {\n    const response = await \n        fetch(`${process.env.REACT_APP_ENDERECO_API}/departamentos/${id}`,\n            {\n                method : \"DELETE\",\n                headers : {\n                    \"Content-Type\" : \"application/json\"\n                }\n            }\n        );\n    const data = await response.json();\n    return data;\n}\n\nexport const cadastraDepartamentoAPI = async (departamento, metodo) => {\n    const url = metodo === \"POST\"\n      ? 'http://127.0.0.1:3002/departamentos'\n      : `http://127.0.0.1:3002/departamentos/${departamento.id}`;\n  \n    const response = await fetch(url, {\n      method: metodo,\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(departamento)\n    });\n  \n    if (!response.ok) {\n      console.error(`Erro ao cadastrar: ${response.status} - ${response.statusText}`);\n      return { status: \"error\", message: \"Erro ao cadastrar departamento\" };\n    }\n  \n    try {\n      const data = await response.json();\n      return { status: \"success\", message: \"Departamento cadastrado com sucesso\", data };\n    } catch (error) {\n      console.error(\"Erro ao fazer parse do JSON:\", error);\n      return { status: \"error\", message: \"Erro ao processar resposta da API\" };\n    }\n  };\n  "],"mappings":"AAAA,OAAO,MAAMA,kBAAkB,GAAG,MAAAA,CAAA,KAAY;EAC1C,MAAMC,QAAQ,GAAG,MACbC,KAAK,CAAC,GAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB,gBAAgB,EACvD;IACIC,MAAM,EAAG,KAAK;IACdC,OAAO,EAAG;MACN,cAAc,EAAG;IACrB;EACJ,CACJ,CAAC;EACL,MAAMC,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;EAClC,OAAOD,IAAI;AACf,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAME,2BAA2B,GAAG,MAAOC,EAAE,IAAK;EACrD,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAAC,GAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB,kBAAkBM,EAAE,EAAE,CAAC;EACzF,IAAI,CAACC,QAAQ,CAACC,EAAE,EAAE;IACd,MAAM,IAAIC,KAAK,CAAC,8BAA8B,CAAC;EACnD;EACA,OAAO,MAAMF,QAAQ,CAACH,IAAI,CAAC,CAAC;AAChC,CAAC;AAED,OAAO,MAAMM,8BAA8B,GAAG,MAAMJ,EAAE,IAAI;EACtD,MAAMV,QAAQ,GAAG,MACbC,KAAK,CAAC,GAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB,kBAAkBM,EAAE,EAAE,EAC7D;IACIL,MAAM,EAAG,QAAQ;IACjBC,OAAO,EAAG;MACN,cAAc,EAAG;IACrB;EACJ,CACJ,CAAC;EACL,MAAMC,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;EAClC,OAAOD,IAAI;AACf,CAAC;AAED,OAAO,MAAMQ,uBAAuB,GAAG,MAAAA,CAAOC,YAAY,EAAEC,MAAM,KAAK;EACnE,MAAMC,GAAG,GAAGD,MAAM,KAAK,MAAM,GACzB,qCAAqC,GACrC,uCAAuCD,YAAY,CAACN,EAAE,EAAE;EAE5D,MAAMV,QAAQ,GAAG,MAAMC,KAAK,CAACiB,GAAG,EAAE;IAChCb,MAAM,EAAEY,MAAM;IACdX,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDa,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,YAAY;EACnC,CAAC,CAAC;EAEF,IAAI,CAAChB,QAAQ,CAACY,EAAE,EAAE;IAChBU,OAAO,CAACC,KAAK,CAAC,sBAAsBvB,QAAQ,CAACwB,MAAM,MAAMxB,QAAQ,CAACyB,UAAU,EAAE,CAAC;IAC/E,OAAO;MAAED,MAAM,EAAE,OAAO;MAAEE,OAAO,EAAE;IAAiC,CAAC;EACvE;EAEA,IAAI;IACF,MAAMnB,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;IAClC,OAAO;MAAEgB,MAAM,EAAE,SAAS;MAAEE,OAAO,EAAE,qCAAqC;MAAEnB;IAAK,CAAC;EACpF,CAAC,CAAC,OAAOgB,KAAK,EAAE;IACdD,OAAO,CAACC,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACpD,OAAO;MAAEC,MAAM,EAAE,OAAO;MAAEE,OAAO,EAAE;IAAoC,CAAC;EAC1E;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}