{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\20212PF.CC0020\\\\Documents\\\\Gestao_Frontend\\\\Gestao_Front\\\\src\\\\componentes\\\\telas\\\\departamento\\\\Departamento.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { getDepartamentoAPI, getDepartamentoPorCodigoAPI, deleteDepartamentoPorCodigoAPI, cadastraDepartamentoAPI } from \"../../../servicos/DepartamentoServico\";\nimport Tabela from \"./Tabela\";\nimport Formulario from \"./Formulario\";\nimport '../Home.css';\nimport DepartamentoContext from \"./DepartamentoContext\";\nimport WithAuth from \"../../../seguranca/WithAuth\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Departamento() {\n  _s();\n  const [alerta, setAlerta] = useState({\n    status: \"\",\n    message: \"\"\n  });\n  const [listaDepartamentos, setListaDepartamentos] = useState([]);\n  const [editar, setEditar] = useState(false);\n  const [exibirForm, setExibirForm] = useState(false);\n  const [departamento, setDepartamento] = useState({\n    id: null,\n    nome: '',\n    localizacao: ''\n  });\n  const [carregando, setCarregando] = useState(true); // Inicia como carregando\n\n  let navigate = useNavigate();\n\n  // Função para iniciar novo departamento\n  const novoDepartamento = () => {\n    console.log('Iniciando novo departamento...');\n    setEditar(false);\n    setAlerta({\n      status: \"\",\n      message: \"\"\n    });\n    setDepartamento({\n      id: null,\n      nome: '',\n      localizacao: ''\n    });\n    setExibirForm(true);\n  };\n\n  // Função para editar departamento\n  const editarDepartamento = async id => {\n    console.log(`Editando departamento com id: ${id}`);\n    try {\n      setCarregando(true);\n      const dados = await getDepartamentoPorCodigoAPI(id);\n      setDepartamento(dados);\n      setEditar(true);\n      setExibirForm(true);\n    } catch (erro) {\n      navigate(\"/login\", {\n        replace: true\n      });\n      setAlerta({\n        status: \"error\",\n        message: \"Erro ao carregar o departamento\"\n      });\n    } finally {\n      setCarregando(false);\n    }\n  };\n\n  // Função para salvar (criar ou editar) departamento\n  const acaoCadastrar = async e => {\n    e.preventDefault();\n    const metodo = editar ? \"PUT\" : \"POST\";\n    try {\n      console.log('Salvando departamento...');\n      setCarregando(true);\n      const retornoAPI = await cadastraDepartamentoAPI(departamento, metodo);\n      setAlerta({\n        status: retornoAPI.status,\n        message: retornoAPI.message\n      });\n      if (editar) {\n        setEditar(false);\n      }\n      recuperaDepartamentos(); // Atualiza a lista\n      setExibirForm(false);\n    } catch (err) {\n      navigate(\"/login\", {\n        replace: true\n      });\n      setAlerta({\n        status: \"error\",\n        message: \"Erro ao salvar o departamento\"\n      });\n    } finally {\n      setCarregando(false);\n    }\n  };\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setDepartamento({\n      ...departamento,\n      [name]: value || ''\n    });\n  };\n  const recuperaDepartamentos = async () => {\n    console.log('Recuperando lista de departamentos...');\n    try {\n      setCarregando(true);\n      const departamentos = await getDepartamentoAPI();\n      setListaDepartamentos(departamentos);\n    } catch (erro) {\n      navigate(\"/login\", {\n        replace: true\n      });\n      setAlerta({\n        status: \"error\",\n        message: \"Erro ao carregar departamentos\"\n      });\n    } finally {\n      setCarregando(false);\n    }\n  };\n  const remover = async id => {\n    console.log(`Removendo departamento com id: ${id}`);\n    if (window.confirm('Deseja remover este departamento?')) {\n      try {\n        const retornoAPI = await deleteDepartamentoPorCodigoAPI(id);\n        setAlerta({\n          status: retornoAPI.status,\n          message: retornoAPI.message\n        });\n        recuperaDepartamentos();\n      } catch (erro) {\n        navigate(\"/login\", {\n          replace: true\n        });\n        setAlerta({\n          status: \"error\",\n          message: \"Erro ao remover o departamento\"\n        });\n      }\n    }\n  };\n  useEffect(() => {\n    recuperaDepartamentos();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"departamento\",\n    children: /*#__PURE__*/_jsxDEV(DepartamentoContext.Provider, {\n      value: {\n        alerta,\n        remover,\n        departamento,\n        editarDepartamento,\n        novoDepartamento,\n        acaoCadastrar,\n        handleChange,\n        exibirForm,\n        setExibirForm\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tabela-container\",\n        children: /*#__PURE__*/_jsxDEV(Tabela, {\n          listaDepartamentos: listaDepartamentos,\n          carregando: carregando\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this), exibirForm && /*#__PURE__*/_jsxDEV(Formulario, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 9\n  }, this);\n}\n_s(Departamento, \"tsz149xjFzn0vG/3poNW0PHr1F4=\", false, function () {\n  return [useNavigate];\n});\n_c = Departamento;\nexport default _c2 = WithAuth(Departamento);\nvar _c, _c2;\n$RefreshReg$(_c, \"Departamento\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["useState","useEffect","getDepartamentoAPI","getDepartamentoPorCodigoAPI","deleteDepartamentoPorCodigoAPI","cadastraDepartamentoAPI","Tabela","Formulario","DepartamentoContext","WithAuth","useNavigate","jsxDEV","_jsxDEV","Departamento","_s","alerta","setAlerta","status","message","listaDepartamentos","setListaDepartamentos","editar","setEditar","exibirForm","setExibirForm","departamento","setDepartamento","id","nome","localizacao","carregando","setCarregando","navigate","novoDepartamento","console","log","editarDepartamento","dados","erro","replace","acaoCadastrar","e","preventDefault","metodo","retornoAPI","recuperaDepartamentos","err","handleChange","name","value","target","departamentos","remover","window","confirm","className","children","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","_c2","$RefreshReg$"],"sources":["C:/Users/20212PF.CC0020/Documents/Gestao_Frontend/Gestao_Front/src/componentes/telas/departamento/Departamento.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport {\r\n    getDepartamentoAPI, getDepartamentoPorCodigoAPI, deleteDepartamentoPorCodigoAPI,\r\n    cadastraDepartamentoAPI\r\n} from \"../../../servicos/DepartamentoServico\";\r\nimport Tabela from \"./Tabela\";\r\nimport Formulario from \"./Formulario\";\r\nimport '../Home.css';\r\nimport DepartamentoContext from \"./DepartamentoContext\";\r\nimport WithAuth from \"../../../seguranca/WithAuth\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction Departamento() {\r\n    const [alerta, setAlerta] = useState({ status: \"\", message: \"\" });\r\n    const [listaDepartamentos, setListaDepartamentos] = useState([]);\r\n    const [editar, setEditar] = useState(false);\r\n    const [exibirForm, setExibirForm] = useState(false);\r\n    const [departamento, setDepartamento] = useState({ id: null, nome: '', localizacao: '' });\r\n    const [carregando, setCarregando] = useState(true); // Inicia como carregando\r\n\r\n    let navigate = useNavigate();\r\n\r\n    // Função para iniciar novo departamento\r\n    const novoDepartamento = () => {\r\n        console.log('Iniciando novo departamento...');\r\n        setEditar(false);\r\n        setAlerta({ status: \"\", message: \"\" });\r\n        setDepartamento({ id: null, nome: '', localizacao: '' });\r\n        setExibirForm(true);\r\n    };\r\n\r\n    // Função para editar departamento\r\n    const editarDepartamento = async (id) => {\r\n        console.log(`Editando departamento com id: ${id}`);\r\n        try {\r\n            setCarregando(true);\r\n            const dados = await getDepartamentoPorCodigoAPI(id);\r\n            setDepartamento(dados);\r\n            setEditar(true);\r\n            setExibirForm(true);\r\n        } catch (erro) {\r\n            navigate(\"/login\", { replace: true });\r\n            setAlerta({ status: \"error\", message: \"Erro ao carregar o departamento\" });\r\n        } finally {\r\n            setCarregando(false);\r\n        }\r\n    };\r\n\r\n    // Função para salvar (criar ou editar) departamento\r\n    const acaoCadastrar = async (e) => {\r\n        e.preventDefault();\r\n        const metodo = editar ? \"PUT\" : \"POST\";\r\n        try {\r\n            console.log('Salvando departamento...');\r\n            setCarregando(true);\r\n\r\n            const retornoAPI = await cadastraDepartamentoAPI(departamento, metodo);\r\n            setAlerta({ status: retornoAPI.status, message: retornoAPI.message });\r\n\r\n            if (editar) {\r\n                setEditar(false);\r\n            }\r\n\r\n            recuperaDepartamentos(); // Atualiza a lista\r\n            setExibirForm(false);\r\n        } catch (err) {\r\n            navigate(\"/login\", { replace: true });\r\n            setAlerta({ status: \"error\", message: \"Erro ao salvar o departamento\" });\r\n        } finally {\r\n            setCarregando(false);\r\n        }\r\n    };\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setDepartamento({ ...departamento, [name]: value || '' });\r\n    };\r\n\r\n    const recuperaDepartamentos = async () => {\r\n        console.log('Recuperando lista de departamentos...');\r\n        try {\r\n            setCarregando(true);\r\n            const departamentos = await getDepartamentoAPI();\r\n            setListaDepartamentos(departamentos);\r\n        } catch (erro) {\r\n            navigate(\"/login\", { replace: true });\r\n            setAlerta({ status: \"error\", message: \"Erro ao carregar departamentos\" });\r\n        } finally {\r\n            setCarregando(false);\r\n        }\r\n    };\r\n\r\n    const remover = async (id) => {\r\n        console.log(`Removendo departamento com id: ${id}`);\r\n        if (window.confirm('Deseja remover este departamento?')) {\r\n            try {\r\n                const retornoAPI = await deleteDepartamentoPorCodigoAPI(id);\r\n                setAlerta({ status: retornoAPI.status, message: retornoAPI.message });\r\n                recuperaDepartamentos();\r\n            } catch (erro) {\r\n                navigate(\"/login\", { replace: true });\r\n                setAlerta({ status: \"error\", message: \"Erro ao remover o departamento\" });\r\n            }\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        recuperaDepartamentos();\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"departamento\">\r\n            <DepartamentoContext.Provider value={{\r\n                alerta,\r\n                remover,\r\n                departamento,\r\n                editarDepartamento,\r\n                novoDepartamento,\r\n                acaoCadastrar,\r\n                handleChange,\r\n                exibirForm,\r\n                setExibirForm\r\n            }}>\r\n                <div className=\"tabela-container\">\r\n                    <Tabela\r\n                        listaDepartamentos={listaDepartamentos}\r\n                        carregando={carregando}\r\n                    />\r\n                </div>\r\n                {exibirForm && <Formulario />}\r\n            </DepartamentoContext.Provider>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default WithAuth(Departamento);\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}