{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aliss\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\Projeto_PW\\\\Gestao_Front\\\\src\\\\componentes\\\\telas\\\\departamento\\\\Departamento.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { getDepartamentoAPI, getDepartamentoPorCodigoAPI, deleteDepartamentoPorCodigoAPI, cadastraDepartamentoAPI } from \"../../../servicos/DepartamentoServico\";\nimport Tabela from \"./Tabela\";\nimport Formulario from \"./Formulario\";\nimport Carregando from \"../../comuns/Carregando\";\nimport '../Home.css';\nimport DepartamentoContext from \"./DepartamentoContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Departamento() {\n  _s();\n  const [alerta, setAlerta] = useState({\n    status: \"\",\n    message: \"\"\n  });\n  const [listaDepartamentos, setListaDepartamentos] = useState([]);\n  const [editar, setEditar] = useState(false);\n  const [exibirForm, setExibirForm] = useState(false);\n  const [departamento, setDepartamento] = useState({\n    id: null,\n    nome: '',\n    localizacao: ''\n  });\n  const [carregando, setCarregando] = useState(false); // Estado de carregamento\n\n  // Função para iniciar novo departamento\n  const novoDepartamento = () => {\n    console.log('Iniciando novo departamento...');\n    setEditar(false);\n    setAlerta({\n      status: \"\",\n      message: \"\"\n    });\n    setDepartamento({\n      id: null,\n      nome: '',\n      localizacao: ''\n    }); // Limpar id ao criar novo\n    setExibirForm(true);\n  };\n\n  // Função para editar departamento\n  const editarDepartamento = async id => {\n    console.log(`Editando departamento com id: ${id}`);\n    try {\n      setCarregando(true); // Inicia o carregamento\n      const dados = await getDepartamentoPorCodigoAPI(id);\n      console.log('Departamento encontrado:', dados);\n      setDepartamento(dados);\n      setEditar(true);\n      setExibirForm(true);\n    } catch (erro) {\n      console.error(\"Erro ao buscar o departamento para edição:\", erro);\n      setAlerta({\n        status: \"error\",\n        message: \"Erro ao carregar o departamento\"\n      });\n    } finally {\n      setCarregando(false); // Finaliza o carregamento\n    }\n  };\n\n  // Função para salvar (criar ou editar) departamento\n  const acaoCadastrar = async e => {\n    e.preventDefault();\n    try {\n      console.log('Salvando departamento...');\n      setCarregando(true); // Inicia o carregamento\n      const retornoAPI = await cadastraDepartamentoAPI(departamento);\n      console.log('Resposta da API:', retornoAPI);\n      setAlerta({\n        status: retornoAPI.status,\n        message: retornoAPI.message\n      });\n\n      // Se for uma edição, setar editar para false após o sucesso\n      if (editar) {\n        setEditar(false);\n      }\n\n      // Recupera a lista de departamentos atualizada\n      recuperaDepartamentos();\n      setExibirForm(false);\n    } catch (err) {\n      console.error(\"Erro ao salvar departamento:\", err);\n      setAlerta({\n        status: \"error\",\n        message: \"Erro ao salvar o departamento\"\n      });\n    } finally {\n      setCarregando(false); // Finaliza o carregamento\n    }\n  };\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    console.log(`Mudança no campo: ${name} com valor: ${value}`);\n    setDepartamento({\n      ...departamento,\n      [name]: value || '' // Garantir que o valor nunca seja null ou undefined\n    });\n  };\n  const recuperaDepartamentos = async () => {\n    console.log('Recuperando lista de departamentos...');\n    setCarregando(true); // Inicia o carregamento\n    try {\n      const departamentos = await getDepartamentoAPI();\n      console.log('Departamentos recuperados:', departamentos);\n      setListaDepartamentos(departamentos.departamentos);\n    } catch (erro) {\n      console.error(\"Erro ao recuperar departamentos:\", erro);\n      setAlerta({\n        status: \"error\",\n        message: \"Erro ao carregar departamentos\"\n      });\n    } finally {\n      setCarregando(false); // Finaliza o carregamento\n    }\n  };\n  const remover = async id => {\n    console.log(`Removendo departamento com id: ${id}`);\n    if (window.confirm('Deseja remover este departamento?')) {\n      try {\n        const retornoAPI = await deleteDepartamentoPorCodigoAPI(id);\n        console.log('Resposta da API ao remover:', retornoAPI);\n        setAlerta({\n          status: retornoAPI.status,\n          message: retornoAPI.message\n        });\n        recuperaDepartamentos();\n      } catch (erro) {\n        console.error(\"Erro ao remover departamento:\", erro);\n        setAlerta({\n          status: \"error\",\n          message: \"Erro ao remover o departamento\"\n        });\n      }\n    }\n  };\n  /*\r\n      useEffect(() => {\r\n          console.log('Componente montado, recuperando departamentos...');\r\n          recuperaDepartamentos(); \r\n      }, []);\r\n  */\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"departamento\",\n    children: /*#__PURE__*/_jsxDEV(DepartamentoContext.Provider, {\n      value: {\n        alerta,\n        listaDepartamentos,\n        remover,\n        departamento,\n        editarDepartamento,\n        novoDepartamento,\n        acaoCadastrar,\n        handleChange,\n        exibirForm,\n        setExibirForm\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tabela-container\",\n        children: /*#__PURE__*/_jsxDEV(Carregando, {\n          carregando: carregando,\n          children: [\"  \", /*#__PURE__*/_jsxDEV(Tabela, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Formulario, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 9\n  }, this);\n}\n_s(Departamento, \"qDrmjGTfkX8kQIUj1rrfh3heur4=\");\n_c = Departamento;\nexport default Departamento;\nvar _c;\n$RefreshReg$(_c, \"Departamento\");","map":{"version":3,"names":["useState","useEffect","getDepartamentoAPI","getDepartamentoPorCodigoAPI","deleteDepartamentoPorCodigoAPI","cadastraDepartamentoAPI","Tabela","Formulario","Carregando","DepartamentoContext","jsxDEV","_jsxDEV","Departamento","_s","alerta","setAlerta","status","message","listaDepartamentos","setListaDepartamentos","editar","setEditar","exibirForm","setExibirForm","departamento","setDepartamento","id","nome","localizacao","carregando","setCarregando","novoDepartamento","console","log","editarDepartamento","dados","erro","error","acaoCadastrar","e","preventDefault","retornoAPI","recuperaDepartamentos","err","handleChange","name","value","target","departamentos","remover","window","confirm","className","children","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/aliss/OneDrive/Área de Trabalho/Projeto_PW/Gestao_Front/src/componentes/telas/departamento/Departamento.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport {\r\n    getDepartamentoAPI, getDepartamentoPorCodigoAPI, deleteDepartamentoPorCodigoAPI,\r\n    cadastraDepartamentoAPI\r\n} from \"../../../servicos/DepartamentoServico\";\r\nimport Tabela from \"./Tabela\";\r\nimport Formulario from \"./Formulario\";\r\nimport Carregando from \"../../comuns/Carregando\";\r\nimport '../Home.css';\r\nimport DepartamentoContext from \"./DepartamentoContext\";\r\n\r\nfunction Departamento() {\r\n    const [alerta, setAlerta] = useState({ status: \"\", message: \"\" });\r\n    const [listaDepartamentos, setListaDepartamentos] = useState([]);\r\n    const [editar, setEditar] = useState(false);\r\n    const [exibirForm, setExibirForm] = useState(false);\r\n    const [departamento, setDepartamento] = useState({ id: null, nome: '', localizacao: '' });\r\n    const [carregando, setCarregando] = useState(false);  // Estado de carregamento\r\n\r\n    // Função para iniciar novo departamento\r\n    const novoDepartamento = () => {\r\n        console.log('Iniciando novo departamento...');\r\n        setEditar(false);\r\n        setAlerta({ status: \"\", message: \"\" });\r\n        setDepartamento({ id: null, nome: '', localizacao: '' }); // Limpar id ao criar novo\r\n        setExibirForm(true);\r\n    };\r\n    \r\n    // Função para editar departamento\r\n    const editarDepartamento = async (id) => {\r\n        console.log(`Editando departamento com id: ${id}`);\r\n        try {\r\n            setCarregando(true);  // Inicia o carregamento\r\n            const dados = await getDepartamentoPorCodigoAPI(id);\r\n            console.log('Departamento encontrado:', dados);\r\n            setDepartamento(dados); \r\n            setEditar(true);\r\n            setExibirForm(true);\r\n        } catch (erro) {\r\n            console.error(\"Erro ao buscar o departamento para edição:\", erro);\r\n            setAlerta({ status: \"error\", message: \"Erro ao carregar o departamento\" });\r\n        } finally {\r\n            setCarregando(false);  // Finaliza o carregamento\r\n        }\r\n    };\r\n\r\n    // Função para salvar (criar ou editar) departamento\r\n    const acaoCadastrar = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            console.log('Salvando departamento...');\r\n            setCarregando(true);  // Inicia o carregamento\r\n            const retornoAPI = await cadastraDepartamentoAPI(departamento); \r\n            console.log('Resposta da API:', retornoAPI);\r\n            setAlerta({ status: retornoAPI.status, message: retornoAPI.message });\r\n\r\n            // Se for uma edição, setar editar para false após o sucesso\r\n            if (editar) {\r\n                setEditar(false);\r\n            }\r\n\r\n            // Recupera a lista de departamentos atualizada\r\n            recuperaDepartamentos();\r\n            setExibirForm(false);\r\n        } catch (err) {\r\n            console.error(\"Erro ao salvar departamento:\", err);\r\n            setAlerta({ status: \"error\", message: \"Erro ao salvar o departamento\" });\r\n        } finally {\r\n            setCarregando(false);  // Finaliza o carregamento\r\n        }\r\n    };\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        console.log(`Mudança no campo: ${name} com valor: ${value}`);\r\n        setDepartamento({\r\n            ...departamento,\r\n            [name]: value || ''  // Garantir que o valor nunca seja null ou undefined\r\n        });\r\n    };\r\n\r\n    const recuperaDepartamentos = async () => {\r\n        console.log('Recuperando lista de departamentos...');\r\n        setCarregando(true);  // Inicia o carregamento\r\n        try {\r\n            const departamentos = await getDepartamentoAPI();\r\n            console.log('Departamentos recuperados:', departamentos);\r\n            setListaDepartamentos(departamentos.departamentos);\r\n        } catch (erro) {\r\n            console.error(\"Erro ao recuperar departamentos:\", erro);\r\n            setAlerta({ status: \"error\", message: \"Erro ao carregar departamentos\" });\r\n        } finally {\r\n            setCarregando(false);  // Finaliza o carregamento\r\n        }\r\n    }\r\n\r\n    const remover = async (id) => {\r\n        console.log(`Removendo departamento com id: ${id}`);\r\n        if (window.confirm('Deseja remover este departamento?')) {\r\n            try {\r\n                const retornoAPI = await deleteDepartamentoPorCodigoAPI(id);\r\n                console.log('Resposta da API ao remover:', retornoAPI);\r\n                setAlerta({ status: retornoAPI.status, message: retornoAPI.message });\r\n                recuperaDepartamentos();\r\n            } catch (erro) {\r\n                console.error(\"Erro ao remover departamento:\", erro);\r\n                setAlerta({ status: \"error\", message: \"Erro ao remover o departamento\" });\r\n            }\r\n        }\r\n    };\r\n/*\r\n    useEffect(() => {\r\n        console.log('Componente montado, recuperando departamentos...');\r\n        recuperaDepartamentos(); \r\n    }, []);\r\n*/\r\n    return (\r\n        <div className=\"departamento\">\r\n            <DepartamentoContext.Provider value={{\r\n                alerta,\r\n                listaDepartamentos,\r\n                remover,\r\n                departamento,\r\n                editarDepartamento,\r\n                novoDepartamento,\r\n                acaoCadastrar,  \r\n                handleChange,\r\n                exibirForm,\r\n                setExibirForm\r\n            }}>\r\n                <div className=\"tabela-container\">\r\n                    <Carregando carregando={carregando}>  {/* Carregamento condicional */}\r\n                        <Tabela />\r\n                    </Carregando>\r\n                </div>\r\n                <Formulario />\r\n            </DepartamentoContext.Provider>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Departamento;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}