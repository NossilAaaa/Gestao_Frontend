{"ast":null,"code":"// Função para obter todos os departamentos\nexport const getDepartamentoAPI = async () => {\n  const response = await fetch(`${process.env.REACT_APP_ENDERECO_API}/departamentos`, {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  });\n  const data = await response.json();\n  return data;\n};\n\n// Função para obter um departamento por ID\nexport const getDepartamentoPorCodigoAPI = async id => {\n  console.log(`Buscando departamento com ID: ${id}`);\n  try {\n    const response = await fetch(`${process.env.REACT_APP_ENDERECO_API}/departamentos/${id}`);\n    if (!response.ok) {\n      console.error(`Erro ao obter departamento com ID ${id}: ${response.statusText}`);\n      throw new Error(`Erro ao obter departamento com ID ${id}: ${response.statusText}`);\n    }\n    const dados = await response.json();\n    console.log('Departamento encontrado:', dados);\n    return dados;\n  } catch (error) {\n    console.error(`Erro ao recuperar o departamento com ID ${id}:`, error);\n    throw error;\n  }\n};\n\n// Função para deletar um departamento por ID\nexport const deleteDepartamentoPorCodigoAPI = async id => {\n  console.log(`Removendo departamento com ID: ${id}`);\n  try {\n    const response = await fetch(`${process.env.REACT_APP_ENDERECO_API}/departamentos/${id}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    if (!response.ok) {\n      console.error(`Erro ao deletar departamento com ID ${id}: ${response.statusText}`);\n      throw new Error(`Erro ao deletar departamento com ID ${id}: ${response.statusText}`);\n    }\n    const dados = await response.json();\n    console.log('Departamento removido:', dados);\n    return dados;\n  } catch (error) {\n    console.error(`Erro ao remover departamento com ID ${id}:`, error);\n    throw error;\n  }\n};\nexport const cadastraDepartamentoAPI = async (objeto, metodo) => {\n  try {\n    const response = await fetch(`${baseUrl}/funcionarios`, {\n      method: metodo,\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(objeto)\n    });\n    return await handleResponse(response);\n  } catch (error) {\n    console.error(\"Erro ao cadastrar/atualizar funcionário:\", error);\n    return null;\n  }\n};\n/*\r\nexport const cadastraDepartamentoAPI = async (departamento) => {\r\n    try {\r\n        const response = await fetch(`${process.env.REACT_APP_ENDERECO_API}/departamentos`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                departamentos: [ \r\n                    {\r\n                        id: departamento.id,\r\n                        nome: departamento.nome,\r\n                        localizacao: departamento.localizacao\r\n                    }\r\n                ]\r\n            })\r\n        });\r\n\r\n        if (!response.ok) {\r\n            throw new Error('Erro ao cadastrar departamento');\r\n        }\r\n\r\n        const data = await response.json();\r\n        return data; \r\n    } catch (error) {\r\n        console.error('Erro ao cadastrar departamento:', error);\r\n        throw error;\r\n    }\r\n};\r\n*/","map":{"version":3,"names":["getDepartamentoAPI","response","fetch","process","env","REACT_APP_ENDERECO_API","method","headers","data","json","getDepartamentoPorCodigoAPI","id","console","log","ok","error","statusText","Error","dados","deleteDepartamentoPorCodigoAPI","cadastraDepartamentoAPI","objeto","metodo","baseUrl","body","JSON","stringify","handleResponse"],"sources":["C:/Users/aliss/OneDrive/Área de Trabalho/Projeto_PW/Gestao_Front/src/servicos/DepartamentoServico.jsx"],"sourcesContent":["// Função para obter todos os departamentos\r\nexport const getDepartamentoAPI = async () => {\r\n    const response = await \r\n        fetch(`${process.env.REACT_APP_ENDERECO_API}/departamentos`,\r\n            {\r\n                method : \"GET\",\r\n                headers : {\r\n                    \"Content-Type\" : \"application/json\"\r\n                }\r\n            }\r\n        );\r\n    const data = await response.json();\r\n    return data;\r\n}\r\n\r\n// Função para obter um departamento por ID\r\nexport const getDepartamentoPorCodigoAPI = async (id) => {\r\n    console.log(`Buscando departamento com ID: ${id}`);\r\n    try {\r\n        const response = await fetch(`${process.env.REACT_APP_ENDERECO_API}/departamentos/${id}`);\r\n\r\n        if (!response.ok) {\r\n            console.error(`Erro ao obter departamento com ID ${id}: ${response.statusText}`);\r\n            throw new Error(`Erro ao obter departamento com ID ${id}: ${response.statusText}`);\r\n        }\r\n\r\n        const dados = await response.json();\r\n        console.log('Departamento encontrado:', dados);\r\n        return dados;\r\n    } catch (error) {\r\n        console.error(`Erro ao recuperar o departamento com ID ${id}:`, error);\r\n        throw error;\r\n    }\r\n}\r\n\r\n// Função para deletar um departamento por ID\r\nexport const deleteDepartamentoPorCodigoAPI = async (id) => {\r\n    console.log(`Removendo departamento com ID: ${id}`);\r\n    try {\r\n        const response = await fetch(`${process.env.REACT_APP_ENDERECO_API}/departamentos/${id}`, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        });\r\n\r\n        if (!response.ok) {\r\n            console.error(`Erro ao deletar departamento com ID ${id}: ${response.statusText}`);\r\n            throw new Error(`Erro ao deletar departamento com ID ${id}: ${response.statusText}`);\r\n        }\r\n\r\n        const dados = await response.json();\r\n        console.log('Departamento removido:', dados);\r\n        return dados;\r\n    } catch (error) {\r\n        console.error(`Erro ao remover departamento com ID ${id}:`, error);\r\n        throw error;\r\n    }\r\n}\r\n\r\nexport const cadastraDepartamentoAPI = async (objeto, metodo) => {\r\n    try {\r\n        const response = await fetch(`${baseUrl}/funcionarios`, {\r\n            method: metodo,\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(objeto)\r\n        });\r\n        return await handleResponse(response);\r\n    } catch (error) {\r\n        console.error(\"Erro ao cadastrar/atualizar funcionário:\", error);\r\n        return null;\r\n    }\r\n};\r\n/*\r\nexport const cadastraDepartamentoAPI = async (departamento) => {\r\n    try {\r\n        const response = await fetch(`${process.env.REACT_APP_ENDERECO_API}/departamentos`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                departamentos: [ \r\n                    {\r\n                        id: departamento.id,\r\n                        nome: departamento.nome,\r\n                        localizacao: departamento.localizacao\r\n                    }\r\n                ]\r\n            })\r\n        });\r\n\r\n        if (!response.ok) {\r\n            throw new Error('Erro ao cadastrar departamento');\r\n        }\r\n\r\n        const data = await response.json();\r\n        return data; \r\n    } catch (error) {\r\n        console.error('Erro ao cadastrar departamento:', error);\r\n        throw error;\r\n    }\r\n};\r\n*/\r\n\r\n"],"mappings":"AAAA;AACA,OAAO,MAAMA,kBAAkB,GAAG,MAAAA,CAAA,KAAY;EAC1C,MAAMC,QAAQ,GAAG,MACbC,KAAK,CAAC,GAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB,gBAAgB,EACvD;IACIC,MAAM,EAAG,KAAK;IACdC,OAAO,EAAG;MACN,cAAc,EAAG;IACrB;EACJ,CACJ,CAAC;EACL,MAAMC,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;EAClC,OAAOD,IAAI;AACf,CAAC;;AAED;AACA,OAAO,MAAME,2BAA2B,GAAG,MAAOC,EAAE,IAAK;EACrDC,OAAO,CAACC,GAAG,CAAC,iCAAiCF,EAAE,EAAE,CAAC;EAClD,IAAI;IACA,MAAMV,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB,kBAAkBM,EAAE,EAAE,CAAC;IAEzF,IAAI,CAACV,QAAQ,CAACa,EAAE,EAAE;MACdF,OAAO,CAACG,KAAK,CAAC,qCAAqCJ,EAAE,KAAKV,QAAQ,CAACe,UAAU,EAAE,CAAC;MAChF,MAAM,IAAIC,KAAK,CAAC,qCAAqCN,EAAE,KAAKV,QAAQ,CAACe,UAAU,EAAE,CAAC;IACtF;IAEA,MAAME,KAAK,GAAG,MAAMjB,QAAQ,CAACQ,IAAI,CAAC,CAAC;IACnCG,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEK,KAAK,CAAC;IAC9C,OAAOA,KAAK;EAChB,CAAC,CAAC,OAAOH,KAAK,EAAE;IACZH,OAAO,CAACG,KAAK,CAAC,2CAA2CJ,EAAE,GAAG,EAAEI,KAAK,CAAC;IACtE,MAAMA,KAAK;EACf;AACJ,CAAC;;AAED;AACA,OAAO,MAAMI,8BAA8B,GAAG,MAAOR,EAAE,IAAK;EACxDC,OAAO,CAACC,GAAG,CAAC,kCAAkCF,EAAE,EAAE,CAAC;EACnD,IAAI;IACA,MAAMV,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB,kBAAkBM,EAAE,EAAE,EAAE;MACtFL,MAAM,EAAE,QAAQ;MAChBC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB;IACJ,CAAC,CAAC;IAEF,IAAI,CAACN,QAAQ,CAACa,EAAE,EAAE;MACdF,OAAO,CAACG,KAAK,CAAC,uCAAuCJ,EAAE,KAAKV,QAAQ,CAACe,UAAU,EAAE,CAAC;MAClF,MAAM,IAAIC,KAAK,CAAC,uCAAuCN,EAAE,KAAKV,QAAQ,CAACe,UAAU,EAAE,CAAC;IACxF;IAEA,MAAME,KAAK,GAAG,MAAMjB,QAAQ,CAACQ,IAAI,CAAC,CAAC;IACnCG,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEK,KAAK,CAAC;IAC5C,OAAOA,KAAK;EAChB,CAAC,CAAC,OAAOH,KAAK,EAAE;IACZH,OAAO,CAACG,KAAK,CAAC,uCAAuCJ,EAAE,GAAG,EAAEI,KAAK,CAAC;IAClE,MAAMA,KAAK;EACf;AACJ,CAAC;AAED,OAAO,MAAMK,uBAAuB,GAAG,MAAAA,CAAOC,MAAM,EAAEC,MAAM,KAAK;EAC7D,IAAI;IACA,MAAMrB,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGqB,OAAO,eAAe,EAAE;MACpDjB,MAAM,EAAEgB,MAAM;MACdf,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDiB,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,MAAM;IAC/B,CAAC,CAAC;IACF,OAAO,MAAMM,cAAc,CAAC1B,QAAQ,CAAC;EACzC,CAAC,CAAC,OAAOc,KAAK,EAAE;IACZH,OAAO,CAACG,KAAK,CAAC,0CAA0C,EAAEA,KAAK,CAAC;IAChE,OAAO,IAAI;EACf;AACJ,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}