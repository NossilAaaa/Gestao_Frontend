{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aliss\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\Projeto_PW\\\\Gestao_Front\\\\src\\\\componentes\\\\telas\\\\departamento\\\\Departamento.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { getDepartamentoAPI, getDepartamentoPorCodigoAPI, deleteDepartamentoPorCodigoAPI, cadastraDepartamentoAPI } from \"../../../servicos/DepartamentoServico\";\nimport Tabela from \"./Tabela\";\nimport Formulario from \"./Formulario\";\nimport Carregando from \"../../comuns/Carregando\";\nimport '../Home.css';\nimport DepartamentoContext from \"./DepartamentoContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Departamento() {\n  _s();\n  const [alerta, setAlerta] = useState({\n    status: \"\",\n    message: \"\"\n  });\n  const [listaDepartamentos, setListaDepartamentos] = useState([]);\n  const [editar, setEditar] = useState(false);\n  const [exibirForm, setExibirForm] = useState(false);\n  const [departamento, setDepartamento] = useState({\n    id: '',\n    nome: '',\n    localizacao: ''\n  });\n  const [carregando, setCarregando] = useState(false);\n  const novoDepartamento = () => {\n    setEditar(false);\n    setAlerta({\n      status: \"\",\n      message: \"\"\n    });\n    setDepartamento({\n      id: 0,\n      nome: \"\",\n      localizacao: \"\"\n    });\n    setExibirForm(true);\n  };\n  const editarDepartamento = async id => {\n    try {\n      const dados = await getDepartamentoPorCodigoAPI(id);\n      setDepartamento(dados);\n      setEditar(true);\n      setExibirForm(true);\n    } catch (erro) {\n      console.error(\"Erro ao buscar o departamento para edição:\", erro);\n      setAlerta({\n        status: \"error\",\n        message: \"Erro ao carregar o departamento\"\n      });\n    }\n  };\n  const acaoCadastrar = async e => {\n    e.preventDefault();\n    try {\n      const retornoAPI = await cadastraDepartamentoAPI(departamento); // A função já lida com POST ou PUT\n      setAlerta({\n        status: retornoAPI.status,\n        message: retornoAPI.message\n      });\n      if (!editar) setEditar(false); // Reseta o estado para novos cadastros\n      recuperaDepartamentos();\n      setExibirForm(false);\n    } catch (err) {\n      console.error(\"Erro ao cadastrar ou editar:\", err);\n      setAlerta({\n        status: \"error\",\n        message: \"Erro ao cadastrar ou editar o departamento\"\n      });\n    }\n  };\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setDepartamento({\n      ...departamento,\n      [name]: value\n    });\n  };\n  const recuperaDepartamentos = async () => {\n    setCarregando(true);\n    try {\n      const departamentos = await getDepartamentoAPI();\n      setListaDepartamentos(departamentos);\n    } catch (erro) {\n      console.error(\"Erro ao recuperar departamentos:\", erro);\n      setAlerta({\n        status: \"error\",\n        message: \"Erro ao carregar departamentos\"\n      });\n    } finally {\n      setCarregando(false);\n    }\n  };\n  const remover = async id => {\n    if (window.confirm('Deseja remover este departamento?')) {\n      try {\n        const retornoAPI = await deleteDepartamentoPorCodigoAPI(id);\n        setAlerta({\n          status: retornoAPI.status,\n          message: retornoAPI.message\n        });\n        recuperaDepartamentos();\n      } catch (erro) {\n        console.error(\"Erro ao remover departamento:\", erro);\n        setAlerta({\n          status: \"error\",\n          message: \"Erro ao remover o departamento\"\n        });\n      }\n    }\n  };\n  useEffect(() => {\n    recuperaDepartamentos();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"departamento\",\n    children: /*#__PURE__*/_jsxDEV(DepartamentoContext.Provider, {\n      value: {\n        alerta,\n        listaDepartamentos,\n        remover,\n        departamento,\n        editarDepartamento,\n        novoDepartamento,\n        acaoCadastrar,\n        handleChange,\n        exibirForm,\n        setExibirForm\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tabela-container\",\n        children: /*#__PURE__*/_jsxDEV(Carregando, {\n          carregando: carregando,\n          children: /*#__PURE__*/_jsxDEV(Tabela, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Formulario, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 9\n  }, this);\n}\n_s(Departamento, \"mWE0NWrc+SSct8esNKacVkyVQ3w=\");\n_c = Departamento;\nexport default Departamento;\nvar _c;\n$RefreshReg$(_c, \"Departamento\");","map":{"version":3,"names":["useState","useEffect","getDepartamentoAPI","getDepartamentoPorCodigoAPI","deleteDepartamentoPorCodigoAPI","cadastraDepartamentoAPI","Tabela","Formulario","Carregando","DepartamentoContext","jsxDEV","_jsxDEV","Departamento","_s","alerta","setAlerta","status","message","listaDepartamentos","setListaDepartamentos","editar","setEditar","exibirForm","setExibirForm","departamento","setDepartamento","id","nome","localizacao","carregando","setCarregando","novoDepartamento","editarDepartamento","dados","erro","console","error","acaoCadastrar","e","preventDefault","retornoAPI","recuperaDepartamentos","err","handleChange","name","value","target","departamentos","remover","window","confirm","className","children","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/aliss/OneDrive/Área de Trabalho/Projeto_PW/Gestao_Front/src/componentes/telas/departamento/Departamento.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport {\n    getDepartamentoAPI, getDepartamentoPorCodigoAPI, deleteDepartamentoPorCodigoAPI,\n    cadastraDepartamentoAPI\n} from \"../../../servicos/DepartamentoServico\";\nimport Tabela from \"./Tabela\";\nimport Formulario from \"./Formulario\";\nimport Carregando from \"../../comuns/Carregando\";\nimport '../Home.css';\nimport DepartamentoContext from \"./DepartamentoContext\";\n\nfunction Departamento() {\n    const [alerta, setAlerta] = useState({ status: \"\", message: \"\" });\n    const [listaDepartamentos, setListaDepartamentos] = useState([]);\n    const [editar, setEditar] = useState(false);\n    const [exibirForm, setExibirForm] = useState(false);\n    const [departamento, setDepartamento] = useState({ id: '', nome: '', localizacao: '' });\n    const [carregando, setCarregando] = useState(false);\n\n    const novoDepartamento = () => {\n        setEditar(false);\n        setAlerta({ status: \"\", message: \"\" });\n        setDepartamento({ id: 0, nome: \"\", localizacao: \"\" });\n        setExibirForm(true);\n    }\n\n    const editarDepartamento = async (id) => {\n        try {\n            const dados = await getDepartamentoPorCodigoAPI(id);\n            setDepartamento(dados);\n            setEditar(true);\n            setExibirForm(true);\n        } catch (erro) {\n            console.error(\"Erro ao buscar o departamento para edição:\", erro);\n            setAlerta({ status: \"error\", message: \"Erro ao carregar o departamento\" });\n        }\n    };\n\n    const acaoCadastrar = async (e) => {\n        e.preventDefault();\n        try {\n            const retornoAPI = await cadastraDepartamentoAPI(departamento); // A função já lida com POST ou PUT\n            setAlerta({ status: retornoAPI.status, message: retornoAPI.message });\n            if (!editar) setEditar(false); // Reseta o estado para novos cadastros\n            recuperaDepartamentos();\n            setExibirForm(false);\n        } catch (err) {\n            console.error(\"Erro ao cadastrar ou editar:\", err);\n            setAlerta({ status: \"error\", message: \"Erro ao cadastrar ou editar o departamento\" });\n        }\n    };\n\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        setDepartamento({ ...departamento, [name]: value });\n    };\n\n    const recuperaDepartamentos = async () => {\n        setCarregando(true);\n        try {\n            const departamentos = await getDepartamentoAPI();\n            setListaDepartamentos(departamentos);\n        } catch (erro) {\n            console.error(\"Erro ao recuperar departamentos:\", erro);\n            setAlerta({ status: \"error\", message: \"Erro ao carregar departamentos\" });\n        } finally {\n            setCarregando(false);\n        }\n    }\n\n    const remover = async (id) => {\n        if (window.confirm('Deseja remover este departamento?')) {\n            try {\n                const retornoAPI = await deleteDepartamentoPorCodigoAPI(id);\n                setAlerta({ status: retornoAPI.status, message: retornoAPI.message });\n                recuperaDepartamentos();\n            } catch (erro) {\n                console.error(\"Erro ao remover departamento:\", erro);\n                setAlerta({ status: \"error\", message: \"Erro ao remover o departamento\" });\n            }\n        }\n    };\n\n    useEffect(() => {\n        recuperaDepartamentos(); \n    }, []);\n\n    return (\n        <div className=\"departamento\">\n            <DepartamentoContext.Provider value={{\n                alerta,\n                listaDepartamentos,\n                remover,\n                departamento,\n                editarDepartamento,\n                novoDepartamento,\n                acaoCadastrar,\n                handleChange,\n                exibirForm,\n                setExibirForm\n            }}>\n                <div className=\"tabela-container\">\n                    <Carregando carregando={carregando}>\n                        <Tabela />\n                    </Carregando>\n                </div>\n                <Formulario />\n            </DepartamentoContext.Provider>\n        </div>\n    );\n}\n\nexport default Departamento;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}