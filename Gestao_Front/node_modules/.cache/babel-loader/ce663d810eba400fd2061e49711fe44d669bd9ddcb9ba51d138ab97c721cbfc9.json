{"ast":null,"code":"// Função para obter todos os departamentos\nexport const getDepartamentoAPI = async () => {\n  console.log('Buscando todos os departamentos...');\n  try {\n    const response = await fetch(`${process.env.REACT_APP_ENDERECO_API}/departamentos`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    if (!response.ok) {\n      console.error(`Erro ao obter departamentos: ${response.statusText}`);\n      throw new Error(`Erro ao obter departamentos: ${response.statusText}`);\n    }\n    const dados = await response.json();\n    console.log('Departamentos obtidos:', dados);\n    return dados;\n  } catch (error) {\n    console.error(\"Erro ao recuperar departamentos:\", error);\n    throw error;\n  }\n};\n\n// Função para obter um departamento por ID\nexport const getDepartamentoPorCodigoAPI = async id => {\n  console.log(`Buscando departamento com ID: ${id}`);\n  try {\n    const response = await fetch(`${process.env.REACT_APP_ENDERECO_API}/departamentos/${id}`);\n    if (!response.ok) {\n      console.error(`Erro ao obter departamento com ID ${id}: ${response.statusText}`);\n      throw new Error(`Erro ao obter departamento com ID ${id}: ${response.statusText}`);\n    }\n    const dados = await response.json();\n    console.log('Departamento encontrado:', dados);\n    return dados;\n  } catch (error) {\n    console.error(`Erro ao recuperar o departamento com ID ${id}:`, error);\n    throw error;\n  }\n};\n\n// Função para deletar um departamento por ID\nexport const deleteDepartamentoPorCodigoAPI = async id => {\n  console.log(`Removendo departamento com ID: ${id}`);\n  try {\n    const response = await fetch(`${process.env.REACT_APP_ENDERECO_API}/departamentos/${id}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    if (!response.ok) {\n      console.error(`Erro ao deletar departamento com ID ${id}: ${response.statusText}`);\n      throw new Error(`Erro ao deletar departamento com ID ${id}: ${response.statusText}`);\n    }\n    const dados = await response.json();\n    console.log('Departamento removido:', dados);\n    return dados;\n  } catch (error) {\n    console.error(`Erro ao remover departamento com ID ${id}:`, error);\n    throw error;\n  }\n};\nexport const cadastraDepartamentoAPI = async departamento => {\n  const response = await fetch('http://127.0.0.1:3002/departamentos', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      id: departamento.id,\n      // Enviar o ID manualmente\n      nome: departamento.nome,\n      localizacao: departamento.localizacao\n    })\n  });\n  if (!response.ok) {\n    throw new Error('Erro ao criar departamento: ' + response.statusText);\n  }\n  return await response.json();\n};","map":{"version":3,"names":["getDepartamentoAPI","console","log","response","fetch","process","env","REACT_APP_ENDERECO_API","method","headers","ok","error","statusText","Error","dados","json","getDepartamentoPorCodigoAPI","id","deleteDepartamentoPorCodigoAPI","cadastraDepartamentoAPI","departamento","body","JSON","stringify","nome","localizacao"],"sources":["C:/Users/aliss/OneDrive/Área de Trabalho/Projeto_PW/Gestao_Front/src/servicos/DepartamentoServico.jsx"],"sourcesContent":["// Função para obter todos os departamentos\nexport const getDepartamentoAPI = async () => {\n    console.log('Buscando todos os departamentos...');\n    try {\n        const response = await fetch(`${process.env.REACT_APP_ENDERECO_API}/departamentos`, {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        });\n\n        if (!response.ok) {\n            console.error(`Erro ao obter departamentos: ${response.statusText}`);\n            throw new Error(`Erro ao obter departamentos: ${response.statusText}`);\n        }\n\n        const dados = await response.json();\n        console.log('Departamentos obtidos:', dados);\n        return dados;\n    } catch (error) {\n        console.error(\"Erro ao recuperar departamentos:\", error);\n        throw error;\n    }\n}\n\n// Função para obter um departamento por ID\nexport const getDepartamentoPorCodigoAPI = async (id) => {\n    console.log(`Buscando departamento com ID: ${id}`);\n    try {\n        const response = await fetch(`${process.env.REACT_APP_ENDERECO_API}/departamentos/${id}`);\n\n        if (!response.ok) {\n            console.error(`Erro ao obter departamento com ID ${id}: ${response.statusText}`);\n            throw new Error(`Erro ao obter departamento com ID ${id}: ${response.statusText}`);\n        }\n\n        const dados = await response.json();\n        console.log('Departamento encontrado:', dados);\n        return dados;\n    } catch (error) {\n        console.error(`Erro ao recuperar o departamento com ID ${id}:`, error);\n        throw error;\n    }\n}\n\n// Função para deletar um departamento por ID\nexport const deleteDepartamentoPorCodigoAPI = async (id) => {\n    console.log(`Removendo departamento com ID: ${id}`);\n    try {\n        const response = await fetch(`${process.env.REACT_APP_ENDERECO_API}/departamentos/${id}`, {\n            method: 'DELETE',\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        });\n\n        if (!response.ok) {\n            console.error(`Erro ao deletar departamento com ID ${id}: ${response.statusText}`);\n            throw new Error(`Erro ao deletar departamento com ID ${id}: ${response.statusText}`);\n        }\n\n        const dados = await response.json();\n        console.log('Departamento removido:', dados);\n        return dados;\n    } catch (error) {\n        console.error(`Erro ao remover departamento com ID ${id}:`, error);\n        throw error;\n    }\n}\n\nexport const cadastraDepartamentoAPI = async (departamento) => {\n    const response = await fetch('http://127.0.0.1:3002/departamentos', {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n            id: departamento.id, // Enviar o ID manualmente\n            nome: departamento.nome,\n            localizacao: departamento.localizacao\n        })\n    });\n\n    if (!response.ok) {\n        throw new Error('Erro ao criar departamento: ' + response.statusText);\n    }\n\n    return await response.json();\n};\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}