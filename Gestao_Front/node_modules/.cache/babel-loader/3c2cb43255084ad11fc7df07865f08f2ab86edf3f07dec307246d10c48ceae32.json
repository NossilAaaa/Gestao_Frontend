{"ast":null,"code":"// Função para cadastrar ou atualizar um departamento\nexport const cadastraDepartamentoAPI = async departamento => {\n  try {\n    // Se o departamento tem um id, significa que estamos atualizando\n    const metodo = departamento.id ? 'PUT' : 'POST'; // Se tem id, atualiza, senão cria\n    const url = departamento.id ? `${process.env.REACT_APP_ENDERECO_API}/departamentos/${departamento.id}` : `${process.env.REACT_APP_ENDERECO_API}/departamentos`;\n    const response = await fetch(url, {\n      method: metodo,\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(departamento)\n    });\n    if (!response.ok) {\n      throw new Error(`Erro ao ${metodo === 'POST' ? 'criar' : 'atualizar'} departamento: ${response.statusText}`);\n    }\n    return await response.json();\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};","map":{"version":3,"names":["cadastraDepartamentoAPI","departamento","metodo","id","url","process","env","REACT_APP_ENDERECO_API","response","fetch","method","headers","body","JSON","stringify","ok","Error","statusText","json","error","console"],"sources":["C:/Users/aliss/OneDrive/Área de Trabalho/Projeto_PW/Gestao_Front/src/servicos/DepartamentoServico.jsx"],"sourcesContent":["// Função para cadastrar ou atualizar um departamento\nexport const cadastraDepartamentoAPI = async (departamento) => {\n    try {\n        // Se o departamento tem um id, significa que estamos atualizando\n        const metodo = departamento.id ? 'PUT' : 'POST'; // Se tem id, atualiza, senão cria\n        const url = departamento.id \n            ? `${process.env.REACT_APP_ENDERECO_API}/departamentos/${departamento.id}` \n            : `${process.env.REACT_APP_ENDERECO_API}/departamentos`;\n\n        const response = await fetch(url, {\n            method: metodo,\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(departamento)\n        });\n\n        if (!response.ok) {\n            throw new Error(`Erro ao ${metodo === 'POST' ? 'criar' : 'atualizar'} departamento: ${response.statusText}`);\n        }\n\n        return await response.json();\n    } catch (error) {\n        console.error(error);\n        throw error;\n    }\n};\n"],"mappings":"AAAA;AACA,OAAO,MAAMA,uBAAuB,GAAG,MAAOC,YAAY,IAAK;EAC3D,IAAI;IACA;IACA,MAAMC,MAAM,GAAGD,YAAY,CAACE,EAAE,GAAG,KAAK,GAAG,MAAM,CAAC,CAAC;IACjD,MAAMC,GAAG,GAAGH,YAAY,CAACE,EAAE,GACrB,GAAGE,OAAO,CAACC,GAAG,CAACC,sBAAsB,kBAAkBN,YAAY,CAACE,EAAE,EAAE,GACxE,GAAGE,OAAO,CAACC,GAAG,CAACC,sBAAsB,gBAAgB;IAE3D,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACL,GAAG,EAAE;MAC9BM,MAAM,EAAER,MAAM;MACdS,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACb,YAAY;IACrC,CAAC,CAAC;IAEF,IAAI,CAACO,QAAQ,CAACO,EAAE,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,WAAWd,MAAM,KAAK,MAAM,GAAG,OAAO,GAAG,WAAW,kBAAkBM,QAAQ,CAACS,UAAU,EAAE,CAAC;IAChH;IAEA,OAAO,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;EAChC,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACpB,MAAMA,KAAK;EACf;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}