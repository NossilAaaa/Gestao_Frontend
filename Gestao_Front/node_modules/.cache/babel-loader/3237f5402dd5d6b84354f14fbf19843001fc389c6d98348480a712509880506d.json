{"ast":null,"code":"// Função para obter todos os departamentos\nexport const getDepartamentoAPI = async () => {\n  try {\n    const response = await fetch(`${process.env.REACT_APP_ENDERECO_API}/departamentos`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    if (!response.ok) {\n      throw new Error(`Erro ao obter departamentos: ${response.statusText}`);\n    }\n    return await response.json();\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n\n// Função para obter um departamento por ID\nexport const getDepartamentoPorCodigoAPI = async id => {\n  try {\n    const response = await fetch(`${process.env.REACT_APP_ENDERECO_API}/departamentos/${id}`);\n    if (!response.ok) {\n      throw new Error(`Erro ao obter departamento com ID ${id}: ${response.statusText}`);\n    }\n    return await response.json();\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n\n// Função para deletar um departamento por ID\nexport const deleteDepartamentoPorCodigoAPI = async id => {\n  try {\n    const response = await fetch(`${process.env.REACT_APP_ENDERECO_API}/departamentos/${id}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    if (!response.ok) {\n      throw new Error(`Erro ao deletar departamento com ID ${id}: ${response.statusText}`);\n    }\n    return await response.json();\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n\n// Função para cadastrar ou atualizar um departamento\nexport const cadastraDepartamentoAPI = async departamento => {\n  try {\n    const response = await fetch(`${process.env.REACT_APP_ENDERECO_API}/departamentos/${departamento.id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(departamento)\n    });\n    if (!response.ok) {\n      throw new Error(`Erro ao atualizar departamento com ID ${departamento.id}: ${response.statusText}`);\n    }\n    return await response.json();\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};","map":{"version":3,"names":["getDepartamentoAPI","response","fetch","process","env","REACT_APP_ENDERECO_API","method","headers","ok","Error","statusText","json","error","console","getDepartamentoPorCodigoAPI","id","deleteDepartamentoPorCodigoAPI","cadastraDepartamentoAPI","departamento","body","JSON","stringify"],"sources":["C:/Users/aliss/OneDrive/Área de Trabalho/Projeto_PW/Gestao_Front/src/servicos/DepartamentoServico.jsx"],"sourcesContent":["// Função para obter todos os departamentos\nexport const getDepartamentoAPI = async () => {\n    try {\n        const response = await fetch(`${process.env.REACT_APP_ENDERECO_API}/departamentos`, {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        });\n\n        if (!response.ok) {\n            throw new Error(`Erro ao obter departamentos: ${response.statusText}`);\n        }\n\n        return await response.json();\n    } catch (error) {\n        console.error(error);\n        throw error;\n    }\n}\n\n// Função para obter um departamento por ID\nexport const getDepartamentoPorCodigoAPI = async (id) => {\n    try {\n        const response = await fetch(`${process.env.REACT_APP_ENDERECO_API}/departamentos/${id}`);\n\n        if (!response.ok) {\n            throw new Error(`Erro ao obter departamento com ID ${id}: ${response.statusText}`);\n        }\n\n        return await response.json();\n    } catch (error) {\n        console.error(error);\n        throw error;\n    }\n}\n\n// Função para deletar um departamento por ID\nexport const deleteDepartamentoPorCodigoAPI = async (id) => {\n    try {\n        const response = await fetch(`${process.env.REACT_APP_ENDERECO_API}/departamentos/${id}`, {\n            method: 'DELETE',\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        });\n\n        if (!response.ok) {\n            throw new Error(`Erro ao deletar departamento com ID ${id}: ${response.statusText}`);\n        }\n\n        return await response.json();\n    } catch (error) {\n        console.error(error);\n        throw error;\n    }\n}\n\n// Função para cadastrar ou atualizar um departamento\nexport const cadastraDepartamentoAPI = async (departamento) => {\n    try {\n        const response = await fetch(`${process.env.REACT_APP_ENDERECO_API}/departamentos/${departamento.id}`, {\n            method: 'PUT',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(departamento)\n        });\n\n        if (!response.ok) {\n            throw new Error(`Erro ao atualizar departamento com ID ${departamento.id}: ${response.statusText}`);\n        }\n\n        return await response.json();\n    } catch (error) {\n        console.error(error);\n        throw error;\n    }\n};"],"mappings":"AAAA;AACA,OAAO,MAAMA,kBAAkB,GAAG,MAAAA,CAAA,KAAY;EAC1C,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB,gBAAgB,EAAE;MAChFC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB;IACJ,CAAC,CAAC;IAEF,IAAI,CAACN,QAAQ,CAACO,EAAE,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,gCAAgCR,QAAQ,CAACS,UAAU,EAAE,CAAC;IAC1E;IAEA,OAAO,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;EAChC,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACpB,MAAMA,KAAK;EACf;AACJ,CAAC;;AAED;AACA,OAAO,MAAME,2BAA2B,GAAG,MAAOC,EAAE,IAAK;EACrD,IAAI;IACA,MAAMd,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB,kBAAkBU,EAAE,EAAE,CAAC;IAEzF,IAAI,CAACd,QAAQ,CAACO,EAAE,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,qCAAqCM,EAAE,KAAKd,QAAQ,CAACS,UAAU,EAAE,CAAC;IACtF;IAEA,OAAO,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;EAChC,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACpB,MAAMA,KAAK;EACf;AACJ,CAAC;;AAED;AACA,OAAO,MAAMI,8BAA8B,GAAG,MAAOD,EAAE,IAAK;EACxD,IAAI;IACA,MAAMd,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB,kBAAkBU,EAAE,EAAE,EAAE;MACtFT,MAAM,EAAE,QAAQ;MAChBC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB;IACJ,CAAC,CAAC;IAEF,IAAI,CAACN,QAAQ,CAACO,EAAE,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,uCAAuCM,EAAE,KAAKd,QAAQ,CAACS,UAAU,EAAE,CAAC;IACxF;IAEA,OAAO,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;EAChC,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACpB,MAAMA,KAAK;EACf;AACJ,CAAC;;AAED;AACA,OAAO,MAAMK,uBAAuB,GAAG,MAAOC,YAAY,IAAK;EAC3D,IAAI;IACA,MAAMjB,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB,kBAAkBa,YAAY,CAACH,EAAE,EAAE,EAAE;MACnGT,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDY,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACH,YAAY;IACrC,CAAC,CAAC;IAEF,IAAI,CAACjB,QAAQ,CAACO,EAAE,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,yCAAyCS,YAAY,CAACH,EAAE,KAAKd,QAAQ,CAACS,UAAU,EAAE,CAAC;IACvG;IAEA,OAAO,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;EAChC,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACpB,MAAMA,KAAK;EACf;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}