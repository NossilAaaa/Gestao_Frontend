{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aliss\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\Projeto_PW\\\\Gestao_Front\\\\src\\\\componentes\\\\telas\\\\departamento\\\\Departamento.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { getDepartamentoAPI, getDepartamentoPorCodigoAPI, deleteDepartamentoPorCodigoAPI, cadastraDepartamentoAPI } from \"../../../servicos/DepartamentoServico\";\nimport Tabela from \"./Tabela\";\nimport Formulario from \"./Formulario\";\nimport Carregando from \"../../comuns/Carregando\";\nimport '../Home.css';\nimport DepartamentoContext from \"./DepartamentoContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Departamento() {\n  _s();\n  const [alerta, setAlerta] = useState({\n    status: \"\",\n    message: \"\"\n  });\n  const [listaDepartamentos, setListaDepartamentos] = useState([]);\n  const [editar, setEditar] = useState(false);\n  const [exibirForm, setExibirForm] = useState(false);\n  const [departamento, setDepartamento] = useState({\n    id: 0,\n    nome: \"\",\n    localizacao: \"\"\n  });\n  const [carregando, setCarregando] = useState(false);\n  const novoDepartamento = () => {\n    setEditar(false); // Garante que o formulário está no estado para criação\n    setAlerta({\n      status: \"\",\n      message: \"\"\n    });\n    setDepartamento({\n      id: 0,\n      nome: \"\",\n      localizacao: \"\"\n    });\n    setExibirForm(true); // Exibe o formulário de criação\n  };\n  const editarDepartamento = async departamento => {\n    try {\n      const resposta = await fetch(`${process.env.REACT_APP_ENDERECO_API}/departamentos/${departamento.id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(departamento)\n      });\n      if (!resposta.ok) {\n        console.error(\"Erro na resposta:\", resposta.status);\n        throw new Error(\"Erro ao atualizar o departamento\");\n      }\n      const dadosAtualizados = await resposta.json();\n      console.log(\"Departamento atualizado:\", dadosAtualizados);\n\n      // Atualiza a lista de departamentos após a edição\n      setListaDepartamentos(prevState => prevState.map(dep => dep.id === departamento.id ? dadosAtualizados : dep));\n    } catch (erro) {\n      console.error(\"Erro:\", erro);\n    }\n  };\n  const acaoCadastrar = async e => {\n    e.preventDefault();\n    const metodo = editar ? \"PUT\" : \"POST\";\n    try {\n      let retornoAPI = await cadastraDepartamentoAPI(departamento, metodo);\n      setAlerta({\n        status: retornoAPI.status,\n        message: retornoAPI.message\n      });\n      setDepartamento(retornoAPI.departamento);\n      if (!editar) {\n        setEditar(true);\n      }\n    } catch (err) {\n      console.log(\"Erro: \" + err);\n    }\n    recuperaDepartamentos();\n  };\n  const handleChange = e => {\n    const name = e.target.name;\n    const value = e.target.value;\n    setDepartamento({\n      ...departamento,\n      [name]: value\n    });\n  };\n  const recuperaDepartamentos = async () => {\n    setCarregando(true);\n    const departamentos = await getDepartamentoAPI();\n    setListaDepartamentos(departamentos);\n    console.log(departamentos); // Verifique se os dados estão sendo carregados corretamente\n    setCarregando(false);\n  };\n  const remover = async id => {\n    if (window.confirm('Deseja remover este departamento?')) {\n      let retornoAPI = await deleteDepartamentoPorCodigoAPI(id);\n      setAlerta({\n        status: retornoAPI.status,\n        message: retornoAPI.message\n      });\n      recuperaDepartamentos();\n    }\n  };\n  useEffect(() => {\n    recuperaDepartamentos(); // Recupera os departamentos ao montar o componente\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"departamento\",\n    children: /*#__PURE__*/_jsxDEV(DepartamentoContext.Provider, {\n      value: {\n        alerta,\n        listaDepartamentos,\n        remover,\n        departamento,\n        editarDepartamento,\n        novoDepartamento,\n        acaoCadastrar,\n        handleChange,\n        exibirForm,\n        setExibirForm\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tabela-container\",\n        children: /*#__PURE__*/_jsxDEV(Carregando, {\n          carregando: carregando,\n          children: /*#__PURE__*/_jsxDEV(Tabela, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Formulario, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 9\n  }, this);\n}\n_s(Departamento, \"AAtuWOrd1kEpaY/UiUrKnla1PSo=\");\n_c = Departamento;\nexport default Departamento;\nvar _c;\n$RefreshReg$(_c, \"Departamento\");","map":{"version":3,"names":["useState","useEffect","getDepartamentoAPI","getDepartamentoPorCodigoAPI","deleteDepartamentoPorCodigoAPI","cadastraDepartamentoAPI","Tabela","Formulario","Carregando","DepartamentoContext","jsxDEV","_jsxDEV","Departamento","_s","alerta","setAlerta","status","message","listaDepartamentos","setListaDepartamentos","editar","setEditar","exibirForm","setExibirForm","departamento","setDepartamento","id","nome","localizacao","carregando","setCarregando","novoDepartamento","editarDepartamento","resposta","fetch","process","env","REACT_APP_ENDERECO_API","method","headers","body","JSON","stringify","ok","console","error","Error","dadosAtualizados","json","log","prevState","map","dep","erro","acaoCadastrar","e","preventDefault","metodo","retornoAPI","err","recuperaDepartamentos","handleChange","name","target","value","departamentos","remover","window","confirm","className","children","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/aliss/OneDrive/Área de Trabalho/Projeto_PW/Gestao_Front/src/componentes/telas/departamento/Departamento.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport {\n    getDepartamentoAPI, getDepartamentoPorCodigoAPI, deleteDepartamentoPorCodigoAPI,\n    cadastraDepartamentoAPI\n} from \"../../../servicos/DepartamentoServico\";\nimport Tabela from \"./Tabela\";\nimport Formulario from \"./Formulario\";\nimport Carregando from \"../../comuns/Carregando\";\nimport '../Home.css'\nimport DepartamentoContext from \"./DepartamentoContext\";\n\nfunction Departamento() {\n    const [alerta, setAlerta] = useState({ status: \"\", message: \"\" });\n    const [listaDepartamentos, setListaDepartamentos] = useState([]);\n    const [editar, setEditar] = useState(false);\n    const [exibirForm, setExibirForm] = useState(false);\n    const [departamento, setDepartamento] = useState({\n        id: 0,\n        nome: \"\",\n        localizacao: \"\"\n    });\n    const [carregando, setCarregando] = useState(false);\n\n    const novoDepartamento = () => {\n        setEditar(false);  // Garante que o formulário está no estado para criação\n        setAlerta({ status: \"\", message: \"\" });\n        setDepartamento({\n            id: 0,\n            nome: \"\",\n            localizacao: \"\"\n        });\n        setExibirForm(true);  // Exibe o formulário de criação\n    }\n\n    const editarDepartamento = async (departamento) => {\n        try {\n            const resposta = await fetch(`${process.env.REACT_APP_ENDERECO_API}/departamentos/${departamento.id}`, {\n                method: 'PUT',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(departamento),\n            });\n    \n            if (!resposta.ok) {\n                console.error(\"Erro na resposta:\", resposta.status);\n                throw new Error(\"Erro ao atualizar o departamento\");\n            }\n    \n            const dadosAtualizados = await resposta.json();\n            console.log(\"Departamento atualizado:\", dadosAtualizados);\n            \n            // Atualiza a lista de departamentos após a edição\n            setListaDepartamentos(prevState =>\n                prevState.map(dep => (dep.id === departamento.id ? dadosAtualizados : dep))\n            );\n        } catch (erro) {\n            console.error(\"Erro:\", erro);\n        }\n    };\n\n    const acaoCadastrar = async e => {\n        e.preventDefault();\n        const metodo = editar ? \"PUT\" : \"POST\";\n        try {\n            let retornoAPI = await cadastraDepartamentoAPI(departamento, metodo);\n            setAlerta({ status: retornoAPI.status, message: retornoAPI.message });\n            setDepartamento(retornoAPI.departamento);\n            if (!editar) {\n                setEditar(true);\n            }\n        } catch (err) {\n            console.log(\"Erro: \" + err);\n        }\n        recuperaDepartamentos();\n    };\n\n    const handleChange = (e) => {\n        const name = e.target.name;\n        const value = e.target.value;\n        setDepartamento({ ...departamento, [name]: value });\n    };\n\n    const recuperaDepartamentos = async () => {\n        setCarregando(true);\n        const departamentos = await getDepartamentoAPI();\n        setListaDepartamentos(departamentos);\n        console.log(departamentos); // Verifique se os dados estão sendo carregados corretamente\n        setCarregando(false);\n    }\n\n    const remover = async id => {\n        if (window.confirm('Deseja remover este departamento?')) {\n            let retornoAPI = await deleteDepartamentoPorCodigoAPI(id);\n            setAlerta({\n                status: retornoAPI.status,\n                message: retornoAPI.message\n            });\n            recuperaDepartamentos();\n        }\n    };\n\n    useEffect(() => {\n        recuperaDepartamentos();  // Recupera os departamentos ao montar o componente\n    }, []);\n    \n\n    return (\n        <div className=\"departamento\">\n            {/* O DepartamentoContext.Provider é onde você passa os valores para os componentes filhos */}\n            <DepartamentoContext.Provider value={{\n                alerta, \n                listaDepartamentos, \n                remover, \n                departamento, \n                editarDepartamento,\n                novoDepartamento, \n                acaoCadastrar, \n                handleChange, \n                exibirForm, \n                setExibirForm\n            }}>\n                <div className=\"tabela-container\">\n                    <Carregando carregando={carregando}>\n                        <Tabela />\n                    </Carregando>\n                </div>\n                <Formulario />\n            </DepartamentoContext.Provider>\n        </div>\n    );\n}\n\nexport default Departamento;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}