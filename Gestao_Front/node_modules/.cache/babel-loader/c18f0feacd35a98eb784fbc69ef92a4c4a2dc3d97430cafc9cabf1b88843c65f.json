{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aliss\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\Projeto_PW\\\\Gestao_Front\\\\src\\\\componentes\\\\telas\\\\funcionario\\\\Funcionario.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport FuncionarioContext from \"./FuncionarioContext\";\nimport { getFuncionarioAPI, getFuncionarioPorCodigoAPI, cadastraFuncionarioAPI, deleteFuncionarioPorCodigoAPI } from \"../../../servicos/FuncionarioServico\";\nimport Tabela from \"./Tabela\";\nimport '../Home.css';\nimport Formulario from \"./Formulario\";\nimport Carregando from \"../../comuns/Carregando\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Funcionario() {\n  _s();\n  const [alerta, setAlerta] = useState({\n    status: \"\",\n    message: \"\"\n  });\n  const [listaFuncionarios, setListaFuncionarios] = useState([]);\n  const [editar, setEditar] = useState(false);\n  const [exibirForm, setExibirForm] = useState(false);\n  const [funcionario, setFuncionario] = useState({\n    id: 0,\n    nome: \"\",\n    cargo: \"\",\n    salario: 0.00,\n    departamento_id: 0\n  });\n  const [carregando, setCarregando] = useState(false);\n  const novoFuncionario = () => {\n    setEditar(false);\n    setAlerta({\n      status: \"\",\n      message: \"\"\n    });\n    setFuncionario({\n      id: 0,\n      nome: \"\",\n      cargo: \"\",\n      salario: 0.00,\n      departamento_id: 0\n    });\n    setExibirForm(true);\n  };\n  const editarFuncionario = async id => {\n    setFuncionario(await getFuncionarioPorCodigoAPI(id)); // Atualizado para pegar funcionário por id\n    setEditar(true);\n    setAlerta({\n      status: \"\",\n      message: \"\"\n    });\n    setExibirForm(true);\n  };\n  const acaoCadastrar = async e => {\n    e.preventDefault();\n    const metodo = editar ? \"PUT\" : \"POST\";\n    try {\n      let retornoAPI = await cadastraFuncionarioAPI(funcionario, metodo); // Alterado para método de funcionário\n      setAlerta({\n        status: retornoAPI.status,\n        message: retornoAPI.message\n      });\n      setFuncionario(retornoAPI.funcionario);\n      if (!editar) {\n        setEditar(true);\n      }\n    } catch (err) {\n      console.log(\"Erro: \" + err);\n    }\n    recuperaFuncionarios();\n  };\n  const handleChange = e => {\n    const name = e.target.name;\n    const value = e.target.value;\n    setFuncionario({\n      ...funcionario,\n      [name]: value\n    });\n  };\n  const recuperaFuncionarios = async () => {\n    setCarregando(true);\n    setListaFuncionarios(await getFuncionarioAPI()); // Atualizado para pegar lista de funcionários\n    setCarregando(false);\n  };\n  const remover = async id => {\n    if (window.confirm('Deseja remover este funcionário?')) {\n      let retornoAPI = await deleteFuncionarioPorCodigoAPI(id); // Alterado para deletar por ID\n      setAlerta({\n        status: retornoAPI.status,\n        message: retornoAPI.message\n      });\n      recuperaFuncionarios();\n    }\n  };\n  useEffect(() => {\n    recuperaFuncionarios();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"funcionario\",\n    children: /*#__PURE__*/_jsxDEV(FuncionarioContext.Provider, {\n      value: {\n        alerta,\n        listaFuncionarios,\n        remover,\n        funcionario,\n        editarFuncionario,\n        novoFuncionario,\n        acaoCadastrar,\n        handleChange,\n        exibirForm,\n        setExibirForm\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tabela\",\n        children: /*#__PURE__*/_jsxDEV(Carregando, {\n          carregando: carregando,\n          children: /*#__PURE__*/_jsxDEV(Tabela, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Formulario, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 9\n  }, this);\n}\n_s(Funcionario, \"VHos5JqZugxe0w0WWKRBFVxr7gk=\");\n_c = Funcionario;\nexport default Funcionario;\nvar _c;\n$RefreshReg$(_c, \"Funcionario\");","map":{"version":3,"names":["useState","useEffect","FuncionarioContext","getFuncionarioAPI","getFuncionarioPorCodigoAPI","cadastraFuncionarioAPI","deleteFuncionarioPorCodigoAPI","Tabela","Formulario","Carregando","jsxDEV","_jsxDEV","Funcionario","_s","alerta","setAlerta","status","message","listaFuncionarios","setListaFuncionarios","editar","setEditar","exibirForm","setExibirForm","funcionario","setFuncionario","id","nome","cargo","salario","departamento_id","carregando","setCarregando","novoFuncionario","editarFuncionario","acaoCadastrar","e","preventDefault","metodo","retornoAPI","err","console","log","recuperaFuncionarios","handleChange","name","target","value","remover","window","confirm","className","children","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/aliss/OneDrive/Área de Trabalho/Projeto_PW/Gestao_Front/src/componentes/telas/funcionario/Funcionario.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport FuncionarioContext from \"./FuncionarioContext\"; \nimport {\n    getFuncionarioAPI, getFuncionarioPorCodigoAPI, cadastraFuncionarioAPI,\n    deleteFuncionarioPorCodigoAPI\n} from \"../../../servicos/FuncionarioServico\";\nimport Tabela from \"./Tabela\";\nimport '../Home.css'\nimport Formulario from \"./Formulario\";\nimport Carregando from \"../../comuns/Carregando\";\n\nfunction Funcionario() {\n\n    const [alerta, setAlerta] = useState({ status: \"\", message: \"\" });\n    const [listaFuncionarios, setListaFuncionarios] = useState([]);\n    const [editar, setEditar] = useState(false);\n    const [exibirForm, setExibirForm] = useState(false);\n    const [funcionario, setFuncionario] = useState({\n        id: 0,\n        nome: \"\",\n        cargo: \"\",\n        salario: 0.00,\n        departamento_id: 0\n    });\n    const [carregando, setCarregando] = useState(false);\n\n    const novoFuncionario = () => {\n        setEditar(false);\n        setAlerta({ status: \"\", message: \"\" });\n        setFuncionario({\n            id: 0,\n            nome: \"\",\n            cargo: \"\",\n            salario: 0.00,\n            departamento_id: 0\n        })\n        setExibirForm(true);\n    }\n\n    const editarFuncionario = async id => {\n        setFuncionario(await getFuncionarioPorCodigoAPI(id)); // Atualizado para pegar funcionário por id\n        setEditar(true);\n        setAlerta({ status: \"\", message: \"\" });\n        setExibirForm(true);\n    }\n\n    const acaoCadastrar = async e => {\n        e.preventDefault();\n        const metodo = editar ? \"PUT\" : \"POST\";\n        try {\n            let retornoAPI = await cadastraFuncionarioAPI(funcionario, metodo); // Alterado para método de funcionário\n            setAlerta({ status: retornoAPI.status, message: retornoAPI.message });\n            setFuncionario(retornoAPI.funcionario);\n            if (!editar) {\n                setEditar(true);\n            }\n        } catch (err) {\n            console.log(\"Erro: \" + err);\n        }\n        recuperaFuncionarios();\n    }\n\n    const handleChange = (e) => {\n        const name = e.target.name;\n        const value = e.target.value;\n        setFuncionario({ ...funcionario, [name]: value });\n    }\n\n    const recuperaFuncionarios = async () => {\n        setCarregando(true);\n        setListaFuncionarios(await getFuncionarioAPI()); // Atualizado para pegar lista de funcionários\n        setCarregando(false);\n    }\n\n    const remover = async id => {\n        if (window.confirm('Deseja remover este funcionário?')) {\n            let retornoAPI = await deleteFuncionarioPorCodigoAPI(id); // Alterado para deletar por ID\n            setAlerta({\n                status: retornoAPI.status,\n                message: retornoAPI.message\n            });\n            recuperaFuncionarios();\n        }\n    }\n\n    useEffect(() => {\n        recuperaFuncionarios();\n    }, []);\n\n    return (\n        <div className=\"funcionario\">\n            <FuncionarioContext.Provider value={{\n                alerta, listaFuncionarios, remover, funcionario, editarFuncionario,\n                novoFuncionario, acaoCadastrar, handleChange, exibirForm, setExibirForm\n            }}>\n                <div className=\"tabela\">\n                    <Carregando carregando={carregando}>\n                        <Tabela />\n                    </Carregando>\n                </div>\n                <Formulario />\n            </FuncionarioContext.Provider>\n        </div>\n    );\n}\n\nexport default Funcionario;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}